name: CI
permissions:
  contents: read
  pull-requests: write
on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "mkdocs.yml"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "mkdocs.yml"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  tests:
    runs-on: ${{ matrix.os && matrix.os || 'ubuntu-latest' }}
    env:
      PYTHONIOENCODING: utf-8
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup git user config
        run: |
          git config --global user.name placeholder
          git config --global user.email placeholder@example.com

      - name: Set up uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
        with:
          version: ${{ matrix.uv_version }}
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python_version }}

      - name: Bump dependencies
        if: ${{ matrix.dependencies == 'max' }}
        run: |
          uv sync --upgrade

      - name: Setup dependencies
        run: |
          uv python pin ${{ matrix.python_version }}
          uv sync --resolution ${{ matrix.dependencies == 'min' && 'lowest-direct' || 'highest' }}

      - name: Run pre-commit
        if: ${{ matrix.pre_commit != false }}
        run: |
          uv run --frozen pre-commit run --all-files

      - name: Run pytest
        uses: pavelzw/pytest-action@510c5e90c360a185039bea56ce8b3e7e51a16507 # v2.2.0
        if: ${{ matrix.pytest != false }}
        with:
          custom-pytest: uv run --frozen pytest
          custom-arguments: --cov --cov-report=xml --junitxml=junit.xml -o junit_family=legacy

      - name: Run benchmarks
        uses: CodSpeedHQ/action@6b43a0cd438f6ca5ad26f9ed03ed159ed2df7da9 # v4.1.1
        if: ${{ matrix.codspeed == true }}
        with:
          mode: instrumentation
          token: ${{ secrets.CODSPEED_TOKEN }}
          run: uv run --frozen pytest --codspeed

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        if: ${{ matrix.codspeed == true }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - name: Upload test results to Codecov

        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        if: ${{ matrix.codecov == true }} && !cancelled()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python_version: ["3.10", "3.14"]
        dependencies: ["lockfile"]
        uv_version: ["latest"]
        codecov: [false]
        codspeed: [false]
        pre_commit: [true]
        pytest: [true]

        include:
          - dependencies: "min"
            python_version: "3.10"
            uv_version: "0.6.8"
            pre_commit: false
          - python_version: "3.11"
          - python_version: "3.12"
          - python_version: "3.13"
          - dependencies: "max"
            python_version: "3.14"
          - codecov: true
            python_version: "3.14"

            pre_commit: false
          - codspeed: true
            python_version: "3.13"

            pre_commit: false
            pytest: false
